{"0": ": SELECT count(*) FROM singer", "1": "SELECT count(*) FROM singer", "2": ": SELECT Name ,  Country ,  Age FROM singer WHERE Age  =  (SELECT max(Age) FROM singer) ORDER BY Age DESC", "3": "SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC", "4": "SELECT average(Age) ,  min(Age) ,  max(Age) FROM singer WHERE country  =  'France'", "5": "SELECT T2.Age FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Country  =  \"France\" ORDER BY T2.Age DESC LIMIT 1", "6": ": SELECT T2.Song_name ,  T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T1.Singer_ID  =  T3.Singer_ID WHERE T1.Is_male  =  \"True\" AND T1.Age  <=  (SELECT Min(Age) FROM singer)", "7": "SELECT T2.Song_name ,  T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Is_male  =  \"True\" INTERSECT SELECT T2.Song_name ,  T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Is_male  =  \"True\"", "8": ": SELECT distinct country FROM singer WHERE age  >  20", "9": ": SELECT country FROM singer WHERE is_male AND age  >=  20", "10": "SELECT country ,  count(*) FROM singer GROUP BY country", "11": ": SELECT country FROM singer GROUP BY country", "12": ": List all names of singers. Sort them by the average age of singers. SELECT name FROM singer WHERE average  >  (SELECT avg(average) FROM singer)", "13": ": SELECT DISTINCT song_name FROM singer WHERE age  >  avg(age)", "14": ": SELECT Location ,  Name FROM stadium WHERE Capacity  BETWEEN 5000 AND 10000", "15": "SELECT T2.Location ,  T1.Name FROM CONCERT AS T1 JOIN STADIUM AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T1.Year  between 2000 AND 2020 AND T2.Capacity BETWEEN 5000 AND 10000", "16": ": SELECT Average FROM Stadium; SELECT Max(Capacity) FROM Stadium;", "17": ": SELECT avg(Capacity) ,  max(Capacity) FROM stadium", "18": "SELECT Name ,  Average FROM STADIUM ORDER BY Average DESC LIMIT 1", "19": "_ID singer_id concert_id singer_id concert_name theme average age singer_id concert_id song_name singer_id city state song_release_year", "20": ": SELECT count(*) FROM concert WHERE YEAR  =  2014 UNION SELECT count(*) FROM concert WHERE YEAR  =  2015", "21": ": SELECT YEAR FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "22": ": SELECT name ,  count(*) FROM CONCERT GROUP BY Stadium_ID", "23": "SELECT T2.Stadium_ID ,  count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_id JOIN singer AS T3 ON T2.Singer_ID  =  T3.Singer_ID JOIN stadium AS T4 ON T1.Stadium_ID  =  T4.Stadium_ID GROUP BY T2.Stadium_ID", "24": ": SELECT T1.Name ,  T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  >  2014", "25": ": SELECT T1.Name ,  T1.Capacity FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.id  =  T2.Singer_id WHERE YEAR  >  2013", "26": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "27": ": SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "28": ": SELECT Name FROM STADIUM WHERE id NOT IN (SELECT stadium_id FROM CONCERT)", "29": ": SELECT T1.name FROM STADIUM AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.stddium_id  =  (SELECT min(Stadium_ID) FROM CONCERT)", "30": ": SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "31": ": SELECT name FROM stadium WHERE YEAR  !=  2014", "32": "SELECT T3.Name FROM STADIUM AS T1 JOIN CONCERT AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID JOIN singer_in_concert AS T3 ON T2.Singer_ID  =  T3.Singer_ID WHERE YEAR  =  2014", "33": "SELECT T1.concert_name ,  T2.theme FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_id  =  T2.concert_id", "34": ": SELECT T2.name ,  T1.theme ,  count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T1.concert_id", "35": ": SELECT t1.Name , count(*) FROM singer AS t1 JOIN singer_in_concert AS t2 ON t1.Name  =  t2.Singer_ID GROUP BY t1.Name", "36": "SELECT T1.name ,  count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.ID  =  T2.Singer_id GROUP BY T1.name", "37": ": SELECT name FROM singer_in_concert WHERE YEAR  =  2014", "38": ": SELECT T1.Name FROM Singer AS T1 JOIN singer_in_concert AS T2 ON T1.id  =  T2.id JOIN concert AS T3 ON T2.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "39": "returns list of dictionaries. sort the list by singer id in descending order. SELECT T2.name ,  T2.nation FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.singer_id  =  T2.Singer_ID WHERE T2.song_name  =  \"Hey\" ORDER BY T1.Singer_id DESC", "40": ": SELECT name ,  country FROM singer WHERE song_name  LIKE '%Hey%'", "41": ": SELECT Name ,  Location FROM stadium WHERE YEAR  =  2014 INTERSECT SELECT Name ,  Location FROM stadium WHERE YEAR  =  2015", "42": "s: SELECT name ,  location FROM stadium WHERE YEAR  =  2014 UNION SELECT name ,  location FROM stadium WHERE YEAR  =  2015", "43": ": SELECT count(*) FROM concert WHERE Highest  =  'Yes'", "44": "the question: What is the average singer age?", "45": "SELECT count(*) FROM pets WHERE weight  >  10", "46": ": SELECT count(*) FROM Pets WHERE pet_weight  >  10", "47": ": SELECT T2.weight FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID  =  T2.PetID ORDER BY T1.PetID LIMIT 1", "48": ": SELECT pet_age ,  weight FROM pets ORDER BY pet_age LIMIT 1", "49": ": SELECT max(weight) ,  T2.pet_type FROM Pets AS T1 JOIN Pets AS T2 ON T1.pet_type  =  T2.pet_type GROUP BY T1.pet_type", "50": ": SELECT max(weight) ,  pet_type FROM Pets GROUP BY pet_type", "51": ": SELECT count(*) FROM Has_Pet AS t1 JOIN Student AS t2 ON t1.StuID  =  t2.StuID WHERE t2.age  >  20", "52": ": SELECT count(*) FROM Has_pet AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  >  20", "53": "SELECT count(*) FROM Pets WHERE pet_type  =  \"dog\" AND sex  =  \"F\"", "54": ": SELECT count(*) FROM Students AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T1.sex  =  \"F\" AND T3.pet_type  =  \"dog\"", "55": "SELECT count(DISTINCT pet_type) FROM Pets;", "56": ": SELECT count(DISTINCT pet_type) FROM Pets", "57": ": SELECT Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.StuID  =  T2.stuID WHERE T1.petID  =  'cat' OR T1.petID  =  'dog'", "58": "SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.petID IN (SELECT PetID FROM Pets WHERE pettype  =  'cat') UNION SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.petID IN (SELECT PetID FROM Pets WHERE pettype  =  'dog')", "59": ": SELECT T2.fname FROM Has_Pet AS T1 JOIN Students AS T2 ON T1.stuID  =  T2.stuID WHERE T1.petID IN (SELECT PetID FROM Has_Pet WHERE pettype  =  'Cat') INTERSECT SELECT PetID FROM Has_Pet WHERE pettype  =  'Dog'", "60": ": SELECT fname FROM student WHERE (pets.PetType  =  \"cat\" OR pets.PetType  =  \"cat\") INTERSECT SELECT fname FROM student WHERE (pets.PetType  =  \"dog\")", "61": "SELECT T2.Major ,  T1.age FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.PetID  =  'cat' EXCEPT SELECT T1.Major ,  T1.age FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.PetID  !=  'cat'", "62": ": SELECT T1.Major ,  T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetID  =  'cat' ORDER BY T1.StuID", "63": ": SELECT StuID FROM Student WHERE pettype != \"cat\"", "64": "SELECT StuID FROM Has_Pet WHERE PetID NOT IN (SELECT PetID FROM Pets WHERE PetType  =  'cat')", "65": ": SELECT Fname ,  age FROM Has_Pet WHERE pet_type  =  \"dog\" EXCEPT SELECT StuID FROM Has_Pet WHERE pet_type  =  \"cat\"", "66": "SELECT first_name FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.stuID  =  T2.stuID WHERE T1.pettype  =  'Dog' INTERSECT SELECT first_name FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.stuID  =  T2.stuID EXCEPT SELECT first_name FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.stuID  =  T2.stuID WHERE T1.pettype  =  'Cat'", "67": ": SELECT PetType ,  pet_age FROM pets ORDER BY pet_age LIMIT 1", "68": ": SELECT pet_type ,  pet_age  FROM pets ORDER BY pet_age DESC LIMIT 1", "69": "SELECT PetID ,  pet_age FROM pets WHERE pet_age  >  1.1", "70": "SELECT StuID ,  pet_age FROM Pets WHERE PetType  =  \"Dog\" AND pet_age  >  51", "71": ": SELECT avg(pet_age) ,  max(pet_age) ,  pet_type FROM Pets GROUP BY pet_type", "72": "SELECT avg(pet_age) ,  max(pet_age) FROM Pets GROUP BY pet_type", "73": ": SELECT avg(pet_age) ,  pet_type FROM Pets GROUP BY pet_type", "74": ": SELECT avg(weight) ,  pet_type FROM Pets GROUP BY pet_type", "75": ": SELECT T1.fname ,  T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID", "76": ": SELECT lname ,  max(age) ,  max(firstname) FROM STUDENT AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY lname", "77": ": SELECT StuID FROM Student WHERE Lname  =  'Smith'", "78": ": SELECT PetID FROM Has_Pet WHERE Advisor  =  \"Smith\"", "79": "SELECT count(*) ,  StuID FROM Has_pet GROUP BY StuID", "80": "the query: SELECT StuID FROM Has_Pet GROUP BY StuID", "81": ": SELECT Fname ,  Sex FROM Student WHERE StuID IN (SELECT StuID FROM has_pet GROUP BY StuID HAVING count(*)  >  1)", "82": "SELECT first_name ,  gender FROM student GROUP BY first_name ,  gender HAVING count(*)  >  1", "83": ": SELECT lname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.petID  =  T3.petID WHERE T3.pet_age  =  3", "84": ": SELECT lname FROM student WHERE pettype  =  'cat' AND pet_age  =  3", "85": ": SELECT avg(T2.age) FROM Students AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T1.StuID NOT IN (SELECT StuID FROM Has_Pet)", "86": ": SELECT avg(pets.pet_age) FROM pets AS t1 JOIN Has_Pet AS t2 ON t1.petID  =  t2.PetID JOIN Student AS t3 ON t3.StuID  =  t1.PetID GROUP BY t2.StuID EXCEPT SELECT avg(pets.pet_age) FROM pets AS t1 JOIN Has_Pet AS t2 ON t1.petID  =  t2.PetID JOIN Student AS t3 ON t3.StuID  =  t1.PetID GROUP BY t2.StuID", "87": ": SELECT count(*) FROM continents", "88": ": SELECT count(*) FROM continents", "89": ": SELECT continent ,  count(*) ,  continent_name FROM countries GROUP BY continent", "90": ": SELECT T1.ContId ,  T1.ContName ,  COUNT(*) FROM countries AS T1 JOIN continents AS T2 ON T1.Continent  =  T2.ContId GROUP BY T1.ContId", "91": ": SELECT count(*) FROM countries", "92": ": SELECT count(*) FROM countries", "93": ": SELECT T1.FullName ,  T1.Maker ,  count(*) FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId GROUP BY T1.Maker", "94": ": SELECT fullname ,  id ,  count(*) FROM car_makers GROUP BY id", "95": ": select max(horsepower) from cars_data sort by horsepower desc limit 1", "96": "SELECT T2.Model FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Maker JOIN car_names AS T3 ON T1.Model  =  T3.Model WHERE T1.Accelerate  =  \"Fastest\" ORDER BY T1.Horsepower LIMIT 1", "97": ": SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Make  =  T2.Model WHERE T1.Weight  <  (SELECT avg(Weight) FROM cars_data)", "98": ": SELECT model FROM car_names WHERE weight  <  (SELECT avg(weight) FROM car_names)", "99": ": SELECT Maker FROM car_makers WHERE YEAR  =  1970", "100": ": SELECT T2.Model ,  T1.Make FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Make  =  T2.Maker WHERE T1.Year  =  1970", "101": ": SELECT T3.Make ,  T1.Year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Make  =  T2.Make JOIN car_makers AS T3 ON T1.Id  =  T3.Id WHERE T1.Year  =  (SELECT min(Year) FROM cars_data)", "102": ": SELECT Maker ,  YEAR FROM cars_data ORDER BY YEAR LIMIT 1"}